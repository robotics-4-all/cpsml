reference comm_idl as idl

Model:
    resources*=Resource
    tags*=Tag
;

Resource: SenseResource | ActResource | ComputeResource | StorageResource;

StorageResource:
    'Resource' '<Storage>' name=ID
        (
            ('uri:' uri=STRING)
            ('interface:' interface=StorageInterface)
            ('namespace:' namespace=STRING)?
        )#
    'end'
;

ComputeResource:
    'Resource' '<Compute>' name=ID
        (
            ('uri:' uri=STRING)
            ('interface:' interface=ComputeInterface)
            ('namespace:' namespace=STRING)?
        )#
    'end'
;

SenseResource:
    'Resource' '<Sense>' name=ID
        (
            ('uri:' uri=STRING)
            ('interface:' interface=SenseInterface)
            ('namespace:' namespace=STRING)?
        )#
    'end'
;

ActResource:
    'Resource' '<Act>' name=ID
        (
            ('uri:' uri=STRING)
            ('interface:' interface=ActInterface)
            ('namespace:' namespace=STRING)?
        )#
    'end'
;

Interface:
    SenseInterface      |
    ActInterface        |
    ComputeInterface    |
    StorageInterface
;

SenseInterface:
    Publisher   |
    RPCService
;

ActInterface:
    Subscriber   |
    RPCService   |
    ActionService
;

ComputeInterface:
    RPCService   |
    Subscriber   |
    ActionService
;

StorageInterface:
    RPCService   |
    Subscriber
;

Producer:
    'Producer' '<' outDataType=[idl.DataType:FQN] '>'
;

Consumer:
    'Consumer' '<' inDataType=[idl.DataType:FQN] '>'
;

Subscriber:
    'Subscriber' '<' inDataType=[idl.DataType:FQN] '>'
;

Publisher:
    'Publisher' '<' outDataType=[idl.DataType:FQN] '>'
;

RPCService:
    'RPCService' '<' outDataType=[idl.DataType:FQN] ','
        outDataType=[idl.DataType:FQN] '>'
;

ActionService:
    'ActionService' '<' goalDataType=[idl.DataType:FQN] ','
        feedbackDataType=[idl.DataType:FQN] ','
        resultDataType=[idl.DataType:FQN] '>'
;

SensorType:
    'Range' |
    'LiDAR' |
    'CameraRGB' |
    'Thermal' |
    'ThermalArray' |
    'CameraThermal' |
    'IMU' |
    'Compass' |
    'Accelerometer' |
    'Magnetometer'  |
    'Other'
;

ActuatorType:
    'MotorController' |
    'LED' |
    'RGBLed' |
    'NeopixelLED' |
    'ServoController' |
    'Other'
;

ListValueType: 'float' | 'int' | 'str' | 'bool' | 'list' | 'dict';

Tag: "Tag" name=ID;

FQN: ID('.'ID)*;
FQNI: ID+['.']('.*')?;
Import: 'import' importURI=FQNI ('as' name=ID)?;

Comment: CommentLine | CommentBlock ;

CommentLine: /\/\/.*?$/;

CommentBlock: /\/\*(.|\n)*?\*\//;
