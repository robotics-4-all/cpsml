reference comm_idl as idl

Model:
    resources*=Resource
    tags*=CustomTag
;

Resource: SenseResource | ActResource | ComputeResource | StorageResource;

// Input
// DBs, etc
StorageResource:
    'Resource' '<Storage>' name=ID
        (
            ('uri:' uri=STRING)
            ('interface:' interface=StorageInterface)
            ('namespace:' namespace=STRING)?
            ('tags:' '-' tags*=PredefinedTags['-'])?
            ('ctags:' '-' ctags*=[CustomTag:FQN]['-'])?
            ('description:' description=STRING)?
        )#
    'end'
;

// Input & Output
ComputeResource:
    'Resource' '<Compute>' name=ID
        (
            ('uri:' uri=STRING)
            ('interface:' interface=ComputeInterface)
            ('namespace:' namespace=STRING)?
            ('tags:' '-' tags*=PredefinedTags['-'])?
            ('ctags:' '-' ctags*=[CustomTag:FQN]['-'])?
            ('description:' description=STRING)?
        )#
    'end'
;

// Output
SenseResource:
    'Resource' '<Sense>' name=ID
        (
            ('uri:' uri=STRING)
            ('interface:' interface=SenseInterface)
            ('namespace:' namespace=STRING)?
            ('tags:' '-' tags*=PredefinedTags['-'])?
            ('ctags:' '-' ctags*=[CustomTag:FQN]['-'])?
            ('description:' description=STRING)?
        )#
    'end'
;

// Input
ActResource:
    'Resource' '<Act>' name=ID
        (
            ('uri:' uri=STRING)
            ('interface:' interface=ActInterface)
            ('namespace:' namespace=STRING)?
            ('tags:' '-' tags*=PredefinedTags['-'])?
            ('ctags:' '-' ctags*=[CustomTag:FQN]['-'])?
            ('description:' description=STRING)?
        )#
    'end'
;

Interface:
    SenseInterface      |
    ActInterface        |
    ComputeInterface    |
    StorageInterface
;

SenseInterface:
    AsyncProducer   |
    RPCService
;

ActInterface:
    AsyncConsumer   |
    RPCService   |
    ActionService
;

ComputeInterface:
    RPCService   |
    ActionService
;

StorageInterface:
    RPCService   |
    AsyncConsumer
;

ProducerInterface: AsyncProducer;

ConsumerInterface: AsyncConsumer | RPCService | ActionService;

AsyncProducer:
    'AsyncProducer' '<' outDataType=[idl.DataType:FQN] '>'
;


AsyncConsumer:
    'AsyncConsumer' '<' inDataType=[idl.DataType:FQN] '>'
;


RPCService:
    'RPCService' '<'
        inDataType=[idl.DataType:FQN] ','
        outDataType=[idl.DataType:FQN]
    '>'
;

ActionService:
    'ActionService'
        '<' goalDataType=[idl.DataType:FQN] ','
            feedbackDataType=[idl.DataType:FQN] ','
            resultDataType=[idl.DataType:FQN]
        '>'
;

RESTService:
    'RESTService'
        '<' inDataType=[idl.DataType:FQN] ','
            outDataType=[idl.DataType:FQN] ','
        '>'
;

Tag: CustomTag | PredefinedTags;

CustomTag:
    "Tag"
        'name:' name=ID
        ('description:' description=STRING)?
    "end"
;

PredefinedTags:
    'Interoceptive' |
    'Exteroceptive' |
    'Physical'      |
    'Virtual'
;

NID: /(.*?)\n/;
FQN: ID('.'ID)*;
FQNI: ID+['.']('.*')?;
Import: 'import' importURI=FQNI ('as' name=ID)?;

Comment: CommentLine | CommentBlock ;

CommentLine: /\/\/.*?$/;

CommentBlock: /\/\*(.|\n)*?\*\//;
