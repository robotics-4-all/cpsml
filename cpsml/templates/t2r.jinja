{% set dModels = [] %}
{% for tag in tags %}
Tag
    name: {{ tag.name }}
    description: {{ tag.description }}
end
{% endfor %}

{% for sensor in thing.sensors %}
{% if sensor.ref.dataModel.name not in dModels %}
TopicMsg {{ sensor.ref.dataModel.name }}Msg
    {% for p in sensor.ref.dataModel.properties %}
    {{ p.name }}: {{ p.type }}
    {% endfor %}
end
{% set dModels = dModels.append(sensor.ref.dataModel.name) %}
{% endif %}
{% endfor %}

{% if thing.__class__.__name__ == 'Robot' %}
TopicMsg JointStateMsg
    name: str[]
    position: float[]
    velocity: float[]
    effort: float[]
end

TopicMsg TransformStampedMsg
    timestamp: int
    frame_id: str
    child_frame_id: str
    transform: Transform
end
{% endif %}

{% for actuator in thing.actuators %}
{% if actuator.ref.dataModel.name not in dModels %}
TopicMsg {{ actuator.ref.dataModel.name }}Msg
    {% for p in actuator.ref.dataModel.properties %}
    {{ p.name }}: {{ p.type }}
    {% endfor %}
end
{% set dModels = dModels.append(actuator.ref.dataModel.name) %}
{% endif %}

{% endfor %}

// Sense Resources ---------------------------------------------------------
{% for sensor in thing.sensors %}
Resource<Sense> {{ sensor.ref.name }}
    uri: '{{ thing.name.lower() }}.sensors.{{ sensor.ref.name.lower() }}'
    interface: AsyncProducer<{{ sensor.ref.dataModel.name }}Msg>
end
{% endfor %}
// -----------------------------------------------------------------------

// Act Resources ---------------------------------------------------------
{% for actuator in thing.actuators %}
Resource<Act> {{ actuator.ref.name }}
    uri: '{{ thing.name.lower() }}.actuators.{{ actuator.ref.name.lower() }}'
    interface: AsyncConsumer<{{ actuator.ref.dataModel.name }}Msg>
end
{% endfor %}
// -----------------------------------------------------------------------

// Robotic Resources ----------------------------------------------------
{% if thing.__class__.__name__ == 'Robot' %}
Resource<Sense> Tf
    uri: '{{ thing.name.lower() }}.sensors.tf'
    interface: AsyncProducer<TransformStampedMsg>
end

Resource<Sense> JointStates
    uri: '{{ thing.name.lower() }}.sensors.joint_states'
    interface: AsyncProducer<JointStateMsg>
end
{% endif %}
// -----------------------------------------------------------------------
