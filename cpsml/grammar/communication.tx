Model:
    imports*=Import
    communication*=CommunicationMiddleware
;


CommunicationMiddleware:
    MessageBroker | RestAPI | AsyncAPI
;


MessageBroker:
    AMQPBroker | MQTTBroker | RedisBroker
;


RestAPI:
    'RestAPI' name=ID
        'namespace' ':' namespace=STRING
        'port' ':' port=INT
    'end'
;

AsyncAPI:
    'AsyncAPI' name=ID
        'namespace' ':' namespace=STRING
        'broker' ':' broker=[MessageBroker:FQN]
    'end'
;


BrokerAuth: BrokerAuthPlain;

BrokerAuthPlain:
    'username' ':' username=STRING
    'password' ':' password=STRING
;

AMQPBroker:
    'Communication<AMQP>' name=ID
    (
        ('host:' host=STRING)
        ('port:' port=INT)
        ('vhost:' vhost=STRING)?
        ('ssl' ':' ssl=BOOL)?
        ('auth' ':' auth=BrokerAuth)?
    )#
    'end'
;

MQTTBroker:
    'Communication<MQTT>' name=ID
    (
        ('host:' host=STRING)
        ('port:' port=INT)
        ('ssl' ':' ssl=BOOL)?
        ('auth' ':' auth=BrokerAuth)?
    )#
    'end'
;

RedisBroker:
    'Communication<Redis>' name=ID
    (
        ('host:' host=STRING)
        ('port:' port=INT)
        ('db:' db=INT)?
        ('ssl' ':' ssl=BOOL)?
        ('auth' ':' auth=BrokerAuth)?
    )#
    'end'
;


FQN: ID('.'ID)*;
FQNI: ID+['.']('.*')?;
Import: 'import' importURI=FQNI ('as' name=ID)?;
