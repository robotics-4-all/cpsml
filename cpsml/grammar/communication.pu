@startuml
set namespaceSeparator .


class communication.Model  {
}


class communication.CommunicationMiddleware <<abstract>> {
}


class communication.MessageBroker <<abstract>> {
}


class communication.REST  {
  name : ID
  baseUrl : STRING
  port : INT
}


class communication.Authentication <<abstract>> {
}


class communication.AuthPlain  {
  username : STRING
  password : STRING
}


class communication.AuthApiKey  {
  key : STRING
}


class communication.AMQPBroker  {
  name : ID
  host : STRING
  port : INT
  vhost : STRING
  ssl : BOOL
}


class communication.MQTTBroker  {
  name : ID
  host : STRING
  port : INT
  ssl : BOOL
}


class communication.RedisBroker  {
  name : ID
  host : STRING
  port : INT
  db : INT
  ssl : BOOL
}


class communication.Import  {
  importURI : FQNI
  name : ID
}


communication.Model *--> communication.Import: imports 0..*
communication.Model *--> communication.CommunicationMiddleware: communication 0..*
communication.CommunicationMiddleware <|-- communication.MessageBroker
communication.CommunicationMiddleware <|-- communication.REST
communication.MessageBroker <|-- communication.AMQPBroker
communication.MessageBroker <|-- communication.MQTTBroker
communication.MessageBroker <|-- communication.RedisBroker
communication.REST *--> communication.Authentication: auth
communication.Authentication <|-- communication.AuthPlain
communication.Authentication <|-- communication.AuthApiKey
communication.AMQPBroker *--> communication.Authentication: auth
communication.MQTTBroker *--> communication.Authentication: auth
communication.RedisBroker *--> communication.Authentication: auth

legend
  Match rules:
  |= Name  |= Rule details |
  | FQNI | (ID)+ .*\? |
  | FQN | ID (. ID)* |
end legend

@enduml
