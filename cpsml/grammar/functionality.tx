import datatype

DFModel:
    imports*=Import
    functionality*=DeviceFunctionality
;

DeviceFunctionality:
    'DFunctionality' name=ID
        (
        ('reqSensors:' '-' requiredSensors*=SensorTypeDef['-'])?
        ('optSensors:' '-' optionalSensors*=SensorTypeDef['-'])?
        ('reqActuators:' '-' requiredActuators*=ActuatorTypeDef['-'])?
        ('optActuators:' '-' optionalActuators*=ActuatorTypeDef['-'])?
        ('reqFunctionality:' '-' reqFunc*=[DeviceFunctionality:FQN]['-'])?
        ('optFunctionality:' '-' optFunc*=[DeviceFunctionality:FQN]['-'])?
        ('tags:' '-' tags*=FTag['-'])?
        ('attributes:' '-' attr*=Property['-'])?
        ('inDataModels:' '-' inDataModels*=DDataModelDef['-'])?
        ('outDataModels:' '-' outDataModels*=DDataModelDef['-'])?
        )#
    'end'
;

SensorTypeDef:
    sensor=SensorType ('(' name=ID ')')?
;

ActuatorTypeDef:
    actuator=ActuatorType ('(' name=ID ')')?
;

DDataModelDef:
    dataModel=[DataType:FQN]
        ('(' fromID=ID ')')?
        ('from' fromFunc=[DeviceFunctionality:FQN])?
;

SensorType:
    'RangeFinder'   |
    'LiDAR'         |
    'CameraRGB'     |
    'Thermal'       |
    'ThermalArray'  |
    'CameraThermal' |
    'IMU'           |
    'Compass'       |
    'Accelerometer' |
    'Magnetometer'  |
    'Other'
;

ActuatorType:
    'MotorController'   |
    'LED'               |
    'RGBLed'            |
    'NeopixelLED'       |
    'ServoController'
;

FTag: PredefinedFTag | CustomFTag;

PredefinedFTag:
    'Mobility'                      |
    'Manipulation'                  |
    'NLU'                           |
    'Navigation'                    |
    'Mapping'                       |
    'Localization'                  |
    'SLAM'                          |
    'FaceDetection'                 |
    'ObjectDetection'
;

CustomFTag: name=STRING;

NID: /(.*?)\n/;

FQN: ID('.'ID)*;
FQNI: ID+['.']('.*')?;
Import: 'import' importURI=FQNI ('as' name=ID)?;

Description: /\#(.*?)$/;

Comment: CommentLine | CommentBlock ;

CommentLine: /\/\/.*?$/;

CommentBlock: /\/\*(.|\n)*?\*\//;

