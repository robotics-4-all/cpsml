import msg

Model:
    api=API
;

API:
    'API' name=ID
    (
        'broker'
            broker=BrokerInfo
        'end'

        'endpoints'
            endpoints*=Endpoint
        'end'

        'messages'
            msgs*=Message
        'end'
    )#
    'end'
;

BrokerInfo:
    (
        ('type' ':' btype=BrokerType)
        ('host' ':' host=NID)
        ('port' ':' port=INT)
        ('username' ':' username=STRING)?
        ('password' ':' password=STRING)?
    )#
;

BrokerType:
    'AMQP'  |
    'MQTT'  |
    'Redis'
;

/*
Endpoint:
    (
        ('uri:' uri=ID)
        ('type:' type=EndpointType)
        ('msg:' msg=Message)
        ('namespace:' namespace=STRING)
    )#
;
*/
Endpoint: Publisher | Subscriber;

Publisher:
    'publisher'
    (
        ('uri:' uri=NID)
        ('msg:' msg=[TopicMessage:FQN|^msgs])?
        ('namespace:' namespace=NID)?
    )#
    'end'
;

Subscriber:
    'subscriber'
    (
        ('uri:' uri=NID)
        ('msg:' msg=[TopicMessage:FQN|^msgs])?
        ('namespace:' namespace=NID)?
    )#
    'end'
;

RPC:
    'rpc'
    (
        ('uri:' uri=NID)
        ('msg:' msg=[ReqRespMessage:FQN|+m:msgs])?
        ('namespace:' namespace=NID)?
    )#
    'end'
;

Action:
    'action'
    (
        ('uri:' uri=STRING)
        ('msg:' msg=[ActionMessage:FQN|+m:msgs])?
        ('namespace:' namespace=STRING)?
    )#
    'end'
;

EndpointType:
    'Publisher'     |
    'Subscriber'    |
    'RPC'           |
    'Action'
;

Array:
    "[" values*=Value[','] "]"
;

Value:
    STRING | FLOAT | BOOL | Dict | Array | "null"
;

Dict:
    "{" members*=Member[','] "}"
;

Member:
    key=STRING ':' value=Value
;

NID: /(.*?)\n/;

FQN: ID+['.'];
FQNI: ID+['.']('.*')?;
Import: 'import' importURI=FQNI ('as' name=ID)? ';';

Description: /\#(.*?)$/;

Comment: CommentLine | CommentBlock ;

CommentLine: /\/\/.*?$/;

CommentBlock: /\/\*(.|\n)*?\*\//;

